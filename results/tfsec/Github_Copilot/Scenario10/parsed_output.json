{
  "failed_checks": [
    {
      "rule_id": "AVD-AWS-0131",
      "long_id": "aws-ec2-enable-at-rest-encryption",
      "rule_description": "Instance with unencrypted block device.",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "The block device could be compromised and read from",
      "resolution": "Turn on encryption for all block devices",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/enable-at-rest-encryption/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
      ],
      "description": "Root block device is not encrypted.",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_instance.primary",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/primary_instance_and_volume.tf",
        "start_line": 17,
        "end_line": 27
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0131",
      "long_id": "aws-ec2-enable-at-rest-encryption",
      "rule_description": "Instance with unencrypted block device.",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "The block device could be compromised and read from",
      "resolution": "Turn on encryption for all block devices",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/enable-at-rest-encryption/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
      ],
      "description": "Root block device is not encrypted.",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.primary_instance_and_volume",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/primary_instance_and_volume/main.tf",
        "start_line": 1,
        "end_line": 11
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0026",
      "long_id": "aws-ec2-enable-volume-encryption",
      "rule_description": "EBS volumes must be encrypted",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Unencrypted sensitive data is vulnerable to compromise.",
      "resolution": "Enable encryption of EBS volumes",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/enable-volume-encryption/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted"
      ],
      "description": "EBS volume is not encrypted.",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_ebs_volume.primary_data",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/primary_instance_and_volume.tf",
        "start_line": 29,
        "end_line": 39
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0026",
      "long_id": "aws-ec2-enable-volume-encryption",
      "rule_description": "EBS volumes must be encrypted",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Unencrypted sensitive data is vulnerable to compromise.",
      "resolution": "Enable encryption of EBS volumes",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/enable-volume-encryption/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted"
      ],
      "description": "EBS volume is not encrypted.",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.primary_instance_and_volume",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/primary_instance_and_volume/main.tf",
        "start_line": 13,
        "end_line": 23
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0028",
      "long_id": "aws-ec2-enforce-http-token-imds",
      "rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Instance metadata service can be interacted with freely",
      "resolution": "Enable HTTP token requirement for IMDS",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/enforce-http-token-imds/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
      ],
      "description": "Instance does not require IMDS access to require a token",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_instance.primary",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/primary_instance_and_volume.tf",
        "start_line": 17,
        "end_line": 27
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0028",
      "long_id": "aws-ec2-enforce-http-token-imds",
      "rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Instance metadata service can be interacted with freely",
      "resolution": "Enable HTTP token requirement for IMDS",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/enforce-http-token-imds/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
      ],
      "description": "Instance does not require IMDS access to require a token",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.primary_instance_and_volume",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/primary_instance_and_volume/main.tf",
        "start_line": 1,
        "end_line": 11
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0027",
      "long_id": "aws-ec2-volume-encryption-customer-key",
      "rule_description": "EBS volume encryption should use Customer Managed Keys",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Using AWS managed keys does not allow for fine grained control",
      "resolution": "Enable encryption using customer managed keys",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/volume-encryption-customer-key/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id"
      ],
      "description": "EBS volume does not use a customer-managed KMS key.",
      "severity": "LOW",
      "warning": false,
      "status": 0,
      "resource": "aws_ebs_volume.primary_data",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/primary_instance_and_volume.tf",
        "start_line": 29,
        "end_line": 39
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0027",
      "long_id": "aws-ec2-volume-encryption-customer-key",
      "rule_description": "EBS volume encryption should use Customer Managed Keys",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Using AWS managed keys does not allow for fine grained control",
      "resolution": "Enable encryption using customer managed keys",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/volume-encryption-customer-key/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id"
      ],
      "description": "EBS volume does not use a customer-managed KMS key.",
      "severity": "LOW",
      "warning": false,
      "status": 0,
      "resource": "module.primary_instance_and_volume",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/primary_instance_and_volume/main.tf",
        "start_line": 13,
        "end_line": 23
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'sns:Publish' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'drs:StartFailbackLaunch' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource 'arn:aws:logs:*:*:*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'sns:Publish' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'drs:StartFailbackLaunch' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource 'arn:aws:logs:*:*:*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'drs:StartFailbackLaunch' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource 'arn:aws:logs:*:*:*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'sns:Publish' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_lambda_iam_role",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/dr_lambda_iam_role/main.tf",
        "start_line": 28,
        "end_line": 28
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'drs:StartFailbackLaunch' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.lambda_execution_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/lambda_function.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'drs:StartFailbackLaunch' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.lambda_execution_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/lambda_function.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource 'arn:aws:logs:*:*:*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.lambda_execution_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/lambda_function.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'sns:Publish' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.lambda_execution_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/lambda_function.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'sns:Publish' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.lambda_execution_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/lambda_function.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource 'arn:aws:logs:*:*:*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.lambda_execution_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/lambda_function.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'drs:StartFailbackLaunch' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.dr_lambda_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/dr_lambda_iam_role.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource 'arn:aws:logs:*:*:*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.dr_lambda_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/dr_lambda_iam_role.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 'sns:Publish' on wildcarded resource '*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_policy.dr_lambda_policy",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/dr_lambda_iam_role.tf",
        "start_line": 49,
        "end_line": 49
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0066",
      "long_id": "aws-lambda-enable-tracing",
      "rule_description": "Lambda functions should have X-Ray tracing enabled",
      "rule_provider": "aws",
      "rule_service": "lambda",
      "impact": "Without full tracing enabled it is difficult to trace the flow of logs",
      "resolution": "Enable tracing",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/lambda/enable-tracing/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
      ],
      "description": "Function does not have tracing enabled.",
      "severity": "LOW",
      "warning": false,
      "status": 0,
      "resource": "module.lambda_function",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/lambda_function/main.tf",
        "start_line": 1,
        "end_line": 19
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0066",
      "long_id": "aws-lambda-enable-tracing",
      "rule_description": "Lambda functions should have X-Ray tracing enabled",
      "rule_provider": "aws",
      "rule_service": "lambda",
      "impact": "Without full tracing enabled it is difficult to trace the flow of logs",
      "resolution": "Enable tracing",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/lambda/enable-tracing/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
      ],
      "description": "Function does not have tracing enabled.",
      "severity": "LOW",
      "warning": false,
      "status": 0,
      "resource": "aws_lambda_function.dr_failover",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/lambda_function.tf",
        "start_line": 83,
        "end_line": 101
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0086",
      "long_id": "aws-s3-block-public-acls",
      "rule_description": "S3 Access block should block public ACL",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "PUT calls with public ACLs specified can make objects public",
      "resolution": "Enable blocking any PUT calls with a public ACL specified",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/block-public-acls/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
      ],
      "description": "No public access block so not blocking public acls",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.example_dr_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/s3_backup_bucket.tf",
        "start_line": 17,
        "end_line": 45
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0086",
      "long_id": "aws-s3-block-public-acls",
      "rule_description": "S3 Access block should block public ACL",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "PUT calls with public ACLs specified can make objects public",
      "resolution": "Enable blocking any PUT calls with a public ACL specified",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/block-public-acls/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
      ],
      "description": "No public access block so not blocking public acls",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.s3_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/s3_backup_bucket/main.tf",
        "start_line": 1,
        "end_line": 29
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0087",
      "long_id": "aws-s3-block-public-policy",
      "rule_description": "S3 Access block should block public policy",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Users could put a policy that allows public access",
      "resolution": "Prevent policies that allow public access being PUT",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/block-public-policy/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
      ],
      "description": "No public access block so not blocking public policies",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.example_dr_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/s3_backup_bucket.tf",
        "start_line": 17,
        "end_line": 45
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0087",
      "long_id": "aws-s3-block-public-policy",
      "rule_description": "S3 Access block should block public policy",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Users could put a policy that allows public access",
      "resolution": "Prevent policies that allow public access being PUT",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/block-public-policy/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
      ],
      "description": "No public access block so not blocking public policies",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.s3_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/s3_backup_bucket/main.tf",
        "start_line": 1,
        "end_line": 29
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0088",
      "long_id": "aws-s3-enable-bucket-encryption",
      "rule_description": "Unencrypted S3 bucket.",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "The bucket objects could be read if compromised",
      "resolution": "Configure bucket encryption",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-bucket-encryption/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
      ],
      "description": "Bucket does not have encryption enabled",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.example_dr_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/s3_backup_bucket.tf",
        "start_line": 17,
        "end_line": 45
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0088",
      "long_id": "aws-s3-enable-bucket-encryption",
      "rule_description": "Unencrypted S3 bucket.",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "The bucket objects could be read if compromised",
      "resolution": "Configure bucket encryption",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-bucket-encryption/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
      ],
      "description": "Bucket does not have encryption enabled",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.s3_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/s3_backup_bucket/main.tf",
        "start_line": 1,
        "end_line": 29
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0089",
      "long_id": "aws-s3-enable-bucket-logging",
      "rule_description": "S3 Bucket does not have logging enabled.",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "There is no way to determine the access to this bucket",
      "resolution": "Add a logging block to the resource to enable access logging",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-bucket-logging/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
      ],
      "description": "Bucket does not have logging enabled",
      "severity": "MEDIUM",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.example_dr_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/s3_backup_bucket.tf",
        "start_line": 17,
        "end_line": 45
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0089",
      "long_id": "aws-s3-enable-bucket-logging",
      "rule_description": "S3 Bucket does not have logging enabled.",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "There is no way to determine the access to this bucket",
      "resolution": "Add a logging block to the resource to enable access logging",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-bucket-logging/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
      ],
      "description": "Bucket does not have logging enabled",
      "severity": "MEDIUM",
      "warning": false,
      "status": 0,
      "resource": "module.s3_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/s3_backup_bucket/main.tf",
        "start_line": 1,
        "end_line": 29
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0132",
      "long_id": "aws-s3-encryption-customer-key",
      "rule_description": "S3 encryption should use Customer Managed Keys",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Using AWS managed keys does not allow for fine grained control",
      "resolution": "Enable encryption using customer managed keys",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/encryption-customer-key/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
      ],
      "description": "Bucket does not encrypt data with a customer managed key.",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.example_dr_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/s3_backup_bucket.tf",
        "start_line": 17,
        "end_line": 45
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0132",
      "long_id": "aws-s3-encryption-customer-key",
      "rule_description": "S3 encryption should use Customer Managed Keys",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Using AWS managed keys does not allow for fine grained control",
      "resolution": "Enable encryption using customer managed keys",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/encryption-customer-key/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
      ],
      "description": "Bucket does not encrypt data with a customer managed key.",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.s3_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/s3_backup_bucket/main.tf",
        "start_line": 1,
        "end_line": 29
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0091",
      "long_id": "aws-s3-ignore-public-acls",
      "rule_description": "S3 Access Block should Ignore Public Acl",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "PUT calls with public ACLs specified can make objects public",
      "resolution": "Enable ignoring the application of public ACLs in PUT calls",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/ignore-public-acls/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
      ],
      "description": "No public access block so not ignoring public acls",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.example_dr_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/s3_backup_bucket.tf",
        "start_line": 17,
        "end_line": 45
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0091",
      "long_id": "aws-s3-ignore-public-acls",
      "rule_description": "S3 Access Block should Ignore Public Acl",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "PUT calls with public ACLs specified can make objects public",
      "resolution": "Enable ignoring the application of public ACLs in PUT calls",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/ignore-public-acls/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
      ],
      "description": "No public access block so not ignoring public acls",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.s3_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/s3_backup_bucket/main.tf",
        "start_line": 1,
        "end_line": 29
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0093",
      "long_id": "aws-s3-no-public-buckets",
      "rule_description": "S3 Access block should restrict public bucket to limit access",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Public buckets can be accessed by anyone",
      "resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/no-public-buckets/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets\u00a1"
      ],
      "description": "No public access block so not restricting public buckets",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.example_dr_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/s3_backup_bucket.tf",
        "start_line": 17,
        "end_line": 45
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0093",
      "long_id": "aws-s3-no-public-buckets",
      "rule_description": "S3 Access block should restrict public bucket to limit access",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Public buckets can be accessed by anyone",
      "resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/no-public-buckets/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets\u00a1"
      ],
      "description": "No public access block so not restricting public buckets",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.s3_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/s3_backup_bucket/main.tf",
        "start_line": 1,
        "end_line": 29
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0094",
      "long_id": "aws-s3-specify-public-access-block",
      "rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Public access policies may be applied to sensitive data buckets",
      "resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/specify-public-access-block/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
      ],
      "description": "Bucket does not have a corresponding public access block.",
      "severity": "LOW",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.example_dr_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/s3_backup_bucket.tf",
        "start_line": 17,
        "end_line": 45
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0094",
      "long_id": "aws-s3-specify-public-access-block",
      "rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Public access policies may be applied to sensitive data buckets",
      "resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/specify-public-access-block/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
      ],
      "description": "Bucket does not have a corresponding public access block.",
      "severity": "LOW",
      "warning": false,
      "status": 0,
      "resource": "module.s3_backup_bucket",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario10/modules/s3_backup_bucket/main.tf",
        "start_line": 1,
        "end_line": 29
      },
      "duplicate": false
    }
  ],
  "summary": {
    "CRITICAL": 0,
    "HIGH": 36,
    "MEDIUM": 2,
    "LOW": 6,
    "UNKNOWN": 0,
    "INFO": 0
  }
}