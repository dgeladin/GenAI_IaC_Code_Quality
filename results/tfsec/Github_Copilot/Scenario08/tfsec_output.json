{
	"results": [
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.example",
			"location": {
				"filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario08/main.tf",
				"start_line": 35,
				"end_line": 40
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.example",
			"location": {
				"filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario08/main.tf",
				"start_line": 28,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-ec2-enforce-launch-config-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/enforce-launch-config-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch template does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_launch_template.example_template",
			"location": {
				"filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario08/main.tf",
				"start_line": 47,
				"end_line": 70
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-ec2-enforce-launch-config-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/enforce-launch-config-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch template does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_launch_template.example_template",
			"location": {
				"filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario08/launch_template.tf",
				"start_line": 5,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.example",
			"location": {
				"filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario08/main.tf",
				"start_line": 39,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.example",
			"location": {
				"filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Github_Copilot/Scenario08/main.tf",
				"start_line": 32,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "terraform-aws-modules/vpc/aws/main.tf",
				"start_line": 378,
				"end_line": 378
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "terraform-aws-modules/vpc/aws/main.tf",
				"start_line": 378,
				"end_line": 378
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "terraform-aws-modules/vpc/aws/main.tf",
				"start_line": 378,
				"end_line": 378
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "terraform-aws-modules/vpc/aws/main.tf",
				"start_line": 25,
				"end_line": 43
			}
		}
	]
}
