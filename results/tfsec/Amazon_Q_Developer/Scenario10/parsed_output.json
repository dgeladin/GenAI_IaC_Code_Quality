{
  "failed_checks": [
    {
      "rule_id": "AVD-AWS-0124",
      "long_id": "aws-ec2-add-description-to-security-group-rule",
      "rule_description": "Missing description for security group rule.",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Descriptions provide context for the firewall rule reasons",
      "resolution": "Add descriptions for all security groups rules",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/add-description-to-security-group-rule/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
      ],
      "description": "Security group rule does not have a description.",
      "severity": "LOW",
      "warning": false,
      "status": 0,
      "resource": "module.primary_instance",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/primary_instance/main.tf",
        "start_line": 68,
        "end_line": 75
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0104",
      "long_id": "aws-ec2-no-public-egress-sgr",
      "rule_description": "An egress security group rule allows traffic to /0.",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Your port is egressing data to the internet",
      "resolution": "Set a more restrictive cidr range",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/no-public-egress-sgr/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
      ],
      "description": "Security group rule allows egress to multiple public internet addresses.",
      "severity": "CRITICAL",
      "warning": false,
      "status": 0,
      "resource": "module.primary_instance",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/primary_instance/main.tf",
        "start_line": 73,
        "end_line": 73
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 's3:GetObjectVersionForReplication' on wildcarded resource '7249434e-6a2c-4161-82fe-02eb961ded42/*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_backup",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_backup/main.tf",
        "start_line": 228,
        "end_line": 228
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 's3:ReplicateObject' on wildcarded resource '7249434e-6a2c-4161-82fe-02eb961ded42/*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "module.dr_backup",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_backup/main.tf",
        "start_line": 228,
        "end_line": 228
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0089",
      "long_id": "aws-s3-enable-bucket-logging",
      "rule_description": "S3 Bucket does not have logging enabled.",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "There is no way to determine the access to this bucket",
      "resolution": "Add a logging block to the resource to enable access logging",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-bucket-logging/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
      ],
      "description": "Bucket does not have logging enabled",
      "severity": "MEDIUM",
      "warning": false,
      "status": 0,
      "resource": "module.dr_backup",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_backup/main.tf",
        "start_line": 2,
        "end_line": 17
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0090",
      "long_id": "aws-s3-enable-versioning",
      "rule_description": "S3 Data should be versioned",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Deleted or modified data would not be recoverable",
      "resolution": "Enable versioning to protect against accidental/malicious removal or modification",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-versioning/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
      ],
      "description": "Bucket does not have versioning enabled",
      "severity": "MEDIUM",
      "warning": false,
      "status": 0,
      "resource": "module.dr_backup",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_backup/main.tf",
        "start_line": 2,
        "end_line": 17
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0095",
      "long_id": "aws-sns-enable-topic-encryption",
      "rule_description": "Unencrypted SNS topic.",
      "rule_provider": "aws",
      "rule_service": "sns",
      "impact": "The SNS topic messages could be read if compromised",
      "resolution": "Turn on SNS Topic encryption",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/sns/enable-topic-encryption/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse"
      ],
      "description": "Topic does not have encryption enabled.",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_sns_topic.dr_notifications",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/environments/prod/main.tf",
        "start_line": 2,
        "end_line": 10
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 's3:GetObjectVersionForReplication' on wildcarded resource '25dda09f-b7db-4ab8-84c2-04293cbaf95a/*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_role_policy.replication",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_backup/main.tf",
        "start_line": 228,
        "end_line": 228
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0057",
      "long_id": "aws-iam-no-policy-wildcards",
      "rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
      "rule_provider": "aws",
      "rule_service": "iam",
      "impact": "Overly permissive policies may grant access to sensitive resources",
      "resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/iam/no-policy-wildcards/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
      ],
      "description": "IAM policy document uses sensitive action 's3:ReplicateObject' on wildcarded resource '25dda09f-b7db-4ab8-84c2-04293cbaf95a/*'",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_iam_role_policy.replication",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_backup/main.tf",
        "start_line": 228,
        "end_line": 228
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0089",
      "long_id": "aws-s3-enable-bucket-logging",
      "rule_description": "S3 Bucket does not have logging enabled.",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "There is no way to determine the access to this bucket",
      "resolution": "Add a logging block to the resource to enable access logging",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-bucket-logging/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
      ],
      "description": "Bucket does not have logging enabled",
      "severity": "MEDIUM",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.dr_backup",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_backup/main.tf",
        "start_line": 2,
        "end_line": 17
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0090",
      "long_id": "aws-s3-enable-versioning",
      "rule_description": "S3 Data should be versioned",
      "rule_provider": "aws",
      "rule_service": "s3",
      "impact": "Deleted or modified data would not be recoverable",
      "resolution": "Enable versioning to protect against accidental/malicious removal or modification",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/s3/enable-versioning/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
      ],
      "description": "Bucket does not have versioning enabled",
      "severity": "MEDIUM",
      "warning": false,
      "status": 0,
      "resource": "aws_s3_bucket.dr_backup",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_backup/main.tf",
        "start_line": 2,
        "end_line": 17
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0136",
      "long_id": "aws-sns-topic-encryption-use-cmk",
      "rule_description": "SNS topic not encrypted with CMK.",
      "rule_provider": "aws",
      "rule_service": "sns",
      "impact": "Key management very limited when using default keys.",
      "resolution": "Use a CMK for SNS Topic encryption",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/sns/topic-encryption-use-cmk/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse"
      ],
      "description": "Topic encryption does not use a customer managed key.",
      "severity": "HIGH",
      "warning": false,
      "status": 0,
      "resource": "aws_sns_topic.health_notifications",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/dr_event_trigger/main.tf",
        "start_line": 149,
        "end_line": 149
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0124",
      "long_id": "aws-ec2-add-description-to-security-group-rule",
      "rule_description": "Missing description for security group rule.",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Descriptions provide context for the firewall rule reasons",
      "resolution": "Add descriptions for all security groups rules",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/add-description-to-security-group-rule/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
      ],
      "description": "Security group rule does not have a description.",
      "severity": "LOW",
      "warning": false,
      "status": 0,
      "resource": "aws_security_group_rule.egress",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/primary_instance/main.tf",
        "start_line": 68,
        "end_line": 75
      },
      "duplicate": false
    },
    {
      "rule_id": "AVD-AWS-0104",
      "long_id": "aws-ec2-no-public-egress-sgr",
      "rule_description": "An egress security group rule allows traffic to /0.",
      "rule_provider": "aws",
      "rule_service": "ec2",
      "impact": "Your port is egressing data to the internet",
      "resolution": "Set a more restrictive cidr range",
      "links": [
        "https://aquasecurity.github.io/tfsec/v1.28.11/checks/aws/ec2/no-public-egress-sgr/",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
      ],
      "description": "Security group rule allows egress to multiple public internet addresses.",
      "severity": "CRITICAL",
      "warning": false,
      "status": 0,
      "resource": "aws_security_group_rule.egress",
      "location": {
        "filename": "/home/dgeladin/personal/GenAI_IaC_Code_Quality/data/outputs/Amazon_Q_Developer/Scenario10/modules/primary_instance/main.tf",
        "start_line": 73,
        "end_line": 73
      },
      "duplicate": false
    }
  ],
  "summary": {
    "CRITICAL": 2,
    "HIGH": 6,
    "MEDIUM": 4,
    "LOW": 2,
    "UNKNOWN": 0,
    "INFO": 0
  }
}